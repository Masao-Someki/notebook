import{_ as p,r as o,o as i,c as r,a as s,b as n,d as l,e}from"./app-FOR18dDf.js";const t={},c=s("h1",{id:"espnet2-asr-realtime-demonstration",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#espnet2-asr-realtime-demonstration"},[s("span",null,"ESPnet2-ASR realtime demonstration")])],-1),d=s("p",null,"This notebook provides a demonstration of the realtime E2E-ASR using ESPnet2-ASR.",-1),D=s("ul",null,[s("li",null,"ESPnet2-ASR: https://github.com/espnet/espnet/tree/master/egs2/TEMPLATE/asr1")],-1),y={href:"https://github.com/ftshijt",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># </span><span style="color:#569CD6;">NOTE</span><span style="color:#6A9955;">: pip shows imcompatible errors due to preinstalled libraries but you do not need to care</span></span>
<span class="line"><span style="color:#F44747;">!</span><span style="color:#D4D4D4;">pip install -q espnet==</span><span style="color:#B5CEA8;">0.10</span><span style="color:#D4D4D4;">.0</span></span>
<span class="line"><span style="color:#F44747;">!</span><span style="color:#D4D4D4;">pip install -q espnet_model_zoo</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="asr-model-demo" tabindex="-1"><a class="header-anchor" href="#asr-model-demo"><span>ASR model demo</span></a></h2><h3 id="model-selection" tabindex="-1"><a class="header-anchor" href="#model-selection"><span>Model Selection</span></a></h3>`,3),u={href:"https://github.com/espnet/espnet_model_zoo/blob/master/espnet_model_zoo/table.csv",target:"_blank",rel:"noopener noreferrer"},m=e(`<p>In this demonstration, we will show English, Japanese, Spanish, Mandrain, Multilingual ASR model, respectively</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">#@title Choose English ASR model { run: &quot;auto&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">lang = </span><span style="color:#CE9178;">&#39;en&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">fs = </span><span style="color:#B5CEA8;">16000</span><span style="color:#6A9955;"> #@param {type:&quot;integer&quot;}</span></span>
<span class="line"><span style="color:#D4D4D4;">tag = </span><span style="color:#CE9178;">&#39;Shinji Watanabe/spgispeech_asr_train_asr_conformer6_n_fft512_hop_length256_raw_en_unnorm_bpe5000_valid.acc.ave&#39;</span><span style="color:#6A9955;"> #@param [&quot;Shinji Watanabe/spgispeech_asr_train_asr_conformer6_n_fft512_hop_length256_raw_en_unnorm_bpe5000_valid.acc.ave&quot;, &quot;kamo-naoyuki/librispeech_asr_train_asr_conformer6_n_fft512_hop_length256_raw_en_bpe5000_scheduler_confwarmup_steps40000_optim_conflr0.0025_sp_valid.acc.ave&quot;] {type:&quot;string&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">#@title Choose Japanese ASR model { run: &quot;auto&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">lang = </span><span style="color:#CE9178;">&#39;ja&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">fs = </span><span style="color:#B5CEA8;">16000</span><span style="color:#6A9955;"> #@param {type:&quot;integer&quot;}</span></span>
<span class="line"><span style="color:#D4D4D4;">tag = </span><span style="color:#CE9178;">&#39;Shinji Watanabe/laborotv_asr_train_asr_conformer2_latest33_raw_char_sp_valid.acc.ave&#39;</span><span style="color:#6A9955;"> #@param [&quot;Shinji Watanabe/laborotv_asr_train_asr_conformer2_latest33_raw_char_sp_valid.acc.ave&quot;] {type:&quot;string&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">#@title Choose Spanish ASR model { run: &quot;auto&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">lang = </span><span style="color:#CE9178;">&#39;es&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">fs = </span><span style="color:#B5CEA8;">16000</span><span style="color:#6A9955;"> #@param {type:&quot;integer&quot;}</span></span>
<span class="line"><span style="color:#D4D4D4;">tag = </span><span style="color:#CE9178;">&#39;ftshijt/mls_asr_transformer_valid.acc.best&#39;</span><span style="color:#6A9955;"> #@param [&quot;ftshijt/mls_asr_transformer_valid.acc.best&quot;] {type:&quot;string&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">#@title Choose Mandrain ASR model { run: &quot;auto&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">lang = </span><span style="color:#CE9178;">&#39;zh&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">fs = </span><span style="color:#B5CEA8;">16000</span><span style="color:#6A9955;"> #@param {type:&quot;integer&quot;}</span></span>
<span class="line"><span style="color:#D4D4D4;">tag = </span><span style="color:#CE9178;">&#39;Emiru Tsunoo/aishell_asr_train_asr_streaming_transformer_raw_zh_char_sp_valid.acc.ave&#39;</span><span style="color:#6A9955;"> #@param [&quot;	Emiru Tsunoo/aishell_asr_train_asr_streaming_transformer_raw_zh_char_sp_valid.acc.ave&quot;] {type:&quot;string&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">#@title Choose Multilingual ASR model { run: &quot;auto&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">lang = </span><span style="color:#CE9178;">&#39;multilingual&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">fs = </span><span style="color:#B5CEA8;">16000</span><span style="color:#6A9955;"> #@param {type:&quot;integer&quot;}</span></span>
<span class="line"><span style="color:#D4D4D4;">tag = </span><span style="color:#CE9178;">&#39;ftshijt/open_li52_asr_train_asr_raw_bpe7000_valid.acc.ave_10best&#39;</span><span style="color:#6A9955;"> #@param [&quot;	ftshijt/open_li52_asr_train_asr_raw_bpe7000_valid.acc.ave_10best&quot;] {type:&quot;string&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="model-setup" tabindex="-1"><a class="header-anchor" href="#model-setup"><span>Model Setup</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> time</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> torch</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> string</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> espnet_model_zoo.downloader </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> ModelDownloader</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> espnet2.bin.asr_inference </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Speech2Text</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">d = ModelDownloader()</span></span>
<span class="line"><span style="color:#6A9955;"># It may takes a while to download and build models</span></span>
<span class="line"><span style="color:#D4D4D4;">speech2text = Speech2Text(</span></span>
<span class="line"><span style="color:#D4D4D4;">    **d.download_and_unpack(tag),</span></span>
<span class="line"><span style="color:#9CDCFE;">    device</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;cuda&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    minlenratio</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.0</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    maxlenratio</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.0</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    ctc_weight</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.3</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    beam_size</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    batch_size</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    nbest</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> text_normalizer</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    text = text.upper()</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> text.translate(</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">.maketrans(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">, string.punctuation))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="recognize-our-example-recordings" tabindex="-1"><a class="header-anchor" href="#recognize-our-example-recordings"><span>Recognize our example recordings</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#F44747;">!</span><span style="color:#D4D4D4;">git clone https://github.com/ftshijt/ESPNet_asr_egs.git</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pandas </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> pd</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> soundfile</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> librosa.display</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> IPython.display </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> display, Audio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">egs = pd.read_csv(</span><span style="color:#CE9178;">&quot;ESPNet_asr_egs/egs.csv&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> index, row </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> egs.iterrows():</span></span>
<span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> row[</span><span style="color:#CE9178;">&quot;lang&quot;</span><span style="color:#D4D4D4;">] == lang </span><span style="color:#569CD6;">or</span><span style="color:#D4D4D4;"> lang == </span><span style="color:#CE9178;">&quot;multilingual&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    speech, rate = soundfile.read(</span><span style="color:#CE9178;">&quot;ESPNet_asr_egs/&quot;</span><span style="color:#D4D4D4;"> + row[</span><span style="color:#CE9178;">&quot;path&quot;</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#C586C0;">    assert</span><span style="color:#D4D4D4;"> fs == </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(row[</span><span style="color:#CE9178;">&quot;sr&quot;</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">    nbests = speech2text(speech)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    text, *_ = nbests[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Input Speech: ESPNet_asr_egs/</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">row[</span><span style="color:#CE9178;">&#39;path&#39;</span><span style="color:#D4D4D4;">]</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;">    # let us listen to samples</span></span>
<span class="line"><span style="color:#D4D4D4;">    display(Audio(speech, </span><span style="color:#9CDCFE;">rate</span><span style="color:#D4D4D4;">=rate))</span></span>
<span class="line"><span style="color:#D4D4D4;">    librosa.display.waveplot(speech, </span><span style="color:#9CDCFE;">sr</span><span style="color:#D4D4D4;">=rate)</span></span>
<span class="line"><span style="color:#D4D4D4;">    plt.show()</span></span>
<span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Reference text: </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">text_normalizer(row[</span><span style="color:#CE9178;">&#39;text&#39;</span><span style="color:#D4D4D4;">])</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;ASR hypothesis: </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">text_normalizer(text)</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;*&quot;</span><span style="color:#D4D4D4;"> * </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="recognize-your-own-pre-recordings" tabindex="-1"><a class="header-anchor" href="#recognize-your-own-pre-recordings"><span>Recognize your own pre-recordings</span></a></h3><ol><li>Upload your own pre-recorded recordings</li><li>Recognize your voice with the ASR system</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> google.colab </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> files</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> IPython.display </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> display, Audio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> soundfile</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> librosa.display</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">uploaded = files.upload()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> file_name </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> uploaded.keys():</span></span>
<span class="line"><span style="color:#D4D4D4;">  speech, rate = soundfile.read(file_name)</span></span>
<span class="line"><span style="color:#C586C0;">  assert</span><span style="color:#D4D4D4;"> rate == fs, </span><span style="color:#CE9178;">&quot;mismatch in sampling rate&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  nbests = speech2text(speech)</span></span>
<span class="line"><span style="color:#D4D4D4;">  text, *_ = nbests[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Input Speech: </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">file_name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  display(Audio(speech, </span><span style="color:#9CDCFE;">rate</span><span style="color:#D4D4D4;">=rate))</span></span>
<span class="line"><span style="color:#D4D4D4;">  librosa.display.waveplot(speech, </span><span style="color:#9CDCFE;">sr</span><span style="color:#D4D4D4;">=rate)</span></span>
<span class="line"><span style="color:#D4D4D4;">  plt.show()</span></span>
<span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;ASR hypothesis: </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">text_normalizer(text)</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;*&quot;</span><span style="color:#D4D4D4;"> * </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="recognize-your-own-live-recordings" tabindex="-1"><a class="header-anchor" href="#recognize-your-own-live-recordings"><span>Recognize your own live-recordings</span></a></h3><ol><li>Record your own voice</li><li>Recognize your voice with the ASR system</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># from https://gist.github.com/korakot/c21c3476c024ad6d56d5f48b0bca92be</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> IPython.display </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Javascript</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> google.colab </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> output</span></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> base64 </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> b64decode</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">RECORD = </span><span style="color:#CE9178;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#CE9178;">const sleep = time =&gt; new Promise(resolve =&gt; setTimeout(resolve, time))</span></span>
<span class="line"><span style="color:#CE9178;">const b2text = blob =&gt; new Promise(resolve =&gt; {</span></span>
<span class="line"><span style="color:#CE9178;">  const reader = new FileReader()</span></span>
<span class="line"><span style="color:#CE9178;">  reader.onloadend = e =&gt; resolve(e.srcElement.result)</span></span>
<span class="line"><span style="color:#CE9178;">  reader.readAsDataURL(blob)</span></span>
<span class="line"><span style="color:#CE9178;">})</span></span>
<span class="line"><span style="color:#CE9178;">var record = time =&gt; new Promise(async resolve =&gt; {</span></span>
<span class="line"><span style="color:#CE9178;">  stream = await navigator.mediaDevices.getUserMedia({ audio: true })</span></span>
<span class="line"><span style="color:#CE9178;">  recorder = new MediaRecorder(stream)</span></span>
<span class="line"><span style="color:#CE9178;">  chunks = []</span></span>
<span class="line"><span style="color:#CE9178;">  recorder.ondataavailable = e =&gt; chunks.push(e.data)</span></span>
<span class="line"><span style="color:#CE9178;">  recorder.start()</span></span>
<span class="line"><span style="color:#CE9178;">  await sleep(time)</span></span>
<span class="line"><span style="color:#CE9178;">  recorder.onstop = async ()=&gt;{</span></span>
<span class="line"><span style="color:#CE9178;">    blob = new Blob(chunks)</span></span>
<span class="line"><span style="color:#CE9178;">    text = await b2text(blob)</span></span>
<span class="line"><span style="color:#CE9178;">    resolve(text)</span></span>
<span class="line"><span style="color:#CE9178;">  }</span></span>
<span class="line"><span style="color:#CE9178;">  recorder.stop()</span></span>
<span class="line"><span style="color:#CE9178;">})</span></span>
<span class="line"><span style="color:#CE9178;">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> record</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">sec</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">filename</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;audio.wav&#39;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">  display(Javascript(RECORD))</span></span>
<span class="line"><span style="color:#D4D4D4;">  s = output.eval_js(</span><span style="color:#CE9178;">&#39;record(</span><span style="color:#569CD6;">%d</span><span style="color:#CE9178;">)&#39;</span><span style="color:#D4D4D4;"> % (sec * </span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">  b = b64decode(s.split(</span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;">)[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#C586C0;">  with</span><span style="color:#DCDCAA;"> open</span><span style="color:#D4D4D4;">(filename, </span><span style="color:#CE9178;">&#39;wb+&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> f:</span></span>
<span class="line"><span style="color:#D4D4D4;">    f.write(b)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">audio = </span><span style="color:#CE9178;">&#39;audio.wav&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">second = </span><span style="color:#B5CEA8;">5</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Speak to your microphone </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">second</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> sec...&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">record(second, audio)</span></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Done!&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> librosa</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> librosa.display</span></span>
<span class="line"><span style="color:#D4D4D4;">speech, rate = librosa.load(audio, </span><span style="color:#9CDCFE;">sr</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">16000</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">librosa.display.waveplot(speech, </span><span style="color:#9CDCFE;">sr</span><span style="color:#D4D4D4;">=rate)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span>
<span class="line"><span style="color:#D4D4D4;">plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pysndfile</span></span>
<span class="line"><span style="color:#D4D4D4;">pysndfile.sndio.write(</span><span style="color:#CE9178;">&#39;audio_ds.wav&#39;</span><span style="color:#D4D4D4;">, speech, </span><span style="color:#9CDCFE;">rate</span><span style="color:#D4D4D4;">=rate, </span><span style="color:#9CDCFE;">format</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;wav&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">enc</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;pcm16&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> IPython.display </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> display, Audio</span></span>
<span class="line"><span style="color:#D4D4D4;">display(Audio(speech, </span><span style="color:#9CDCFE;">rate</span><span style="color:#D4D4D4;">=rate))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">nbests = speech2text(speech)</span></span>
<span class="line"><span style="color:#D4D4D4;">text, *_ = nbests[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;ASR hypothesis: </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">text_normalizer(text)</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function C(b,h){const a=o("ExternalLinkIcon");return i(),r("div",null,[c,d,D,s("p",null,[n("Author: Jiatong Shi ("),s("a",y,[n("@ftshijt"),l(a)]),n(")")]),v,s("p",null,[n("Please select model shown in "),s("a",u,[n("espnet_model_zoo"),l(a)])]),m])}const E=p(t,[["render",C],["__file","espnet2_asr_realtime_demo.html.vue"]]);export{E as default};
